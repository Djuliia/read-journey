{"version":3,"file":"static/js/583.e73c4609.chunk.js","mappings":"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","sources":["images/chevron-down.svg","components/MyLibraryBooks/MyLibraryBooks.styled.js","components/AddBook/AddBook.styled.js","components/PopUp/AddBookPopup.styled.js","components/PopUp/AddBookPopup.js","components/AddBook/AddBook.js","components/MyLibraryBooks/MyLibraryBooks.js","pages/Library.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 6L8 10L12 6\",\n    stroke: \"#F9F9F9\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.ed7ba7edebb5c871cb1c129aa7bcc742.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { theme } from 'theme';\nimport chevron from '../../images/chevron-down.svg';\n\nexport const Container = styled.div`\n  padding: 40px 20px;\n  width: 100%;\n  min-height: 407px;\n  border-radius: 30px;\n  background-color: ${theme.colors.secondary};\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n    min-height: 518px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-height: 651px;\n    width: 847px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: 1.14;\n  }\n`;\n\nexport const Select = styled.select`\n  padding: 12px 14px;\n  width: 120px;\n  border: 1px solid #3e3e3e;\n  border-radius: 12px;\n  outline: none;\n  appearance: none;\n  overflow: hidden;\n  background: right 14px center no-repeat url(${chevron}), transparent;\n  color: ${theme.colors.primary};\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  option {\n    color: ${theme.colors.light};\n    background-color: #262626;\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px;\n    width: 153px;\n    font-size: 14px;\n    line-height: 1.29;\n  }\n`;\n\nexport const NoBookWrap = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  width: 197px;\n  margin-top: 63px;\n  @media screen and (min-width: 768px) {\n    margin-top: 86px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 147px;\n    width: 274px;\n  }\n\n  div {\n    margin: 0 auto;\n    margin-bottom: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background-color: #262626;\n    font-size: 50px;\n    font-weight: 500;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n      width: 130px;\n      height: 130px;\n      margin-bottom: 20px;\n      font-size: 70px;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n  }\n\n  span {\n    color: ${theme.colors.light};\n  }\n`;\n\nexport const HelperWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const AddedList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 21px;\n  flex-basis: calc((100% - 21px) / 2);\n  margin-top: 14px;\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n  }\n`;\n\nexport const AddedItem = styled.li`\n  img {\n    width: 137px;\n    border-radius: 8px;\n    margin-bottom: 8px;\n  }\n`;\nexport const InfoWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h3 {\n    margin-bottom: 2px;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.29;\n  }\n\n  p {\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.29;\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(232, 80, 80, 0.1);\n    border: 1px solid rgba(232, 80, 80, 0.2);\n    border-radius: 50%;\n    width: 28px;\n    height: 28px;\n    transition: ${theme.transition};\n    &:hover {\n      border: 1px solid ${theme.colors.error};\n    }\n\n    svg {\n      stroke: ${theme.colors.error};\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n  }\n`;\n\nexport const RecommendedWrap = styled.div`\n  padding: 20px 21px;\n  border-radius: 12px;\n  background-color: #262626;\n  @media screen and (min-width: 768px) {\n    padding: 26px 40px 27px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 20px;\n  }\n`;\n\nexport const BookList = styled.ul`\n  display: flex;\n  gap: 20px;\n  font-size: 10px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n`;\n\nexport const BookItem = styled.li`\n  width: 71px;\n\n  img {\n    border-radius: 8px;\n    margin-bottom: 8px;\n  }\n\n  p,\n  h3 {\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  p {\n    white-space: nowrap;\n    color: ${theme.colors.light};\n    margin-top: 2px;\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  width: 233px;\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n\n  div {\n    margin: 0 auto;\n    margin-bottom: 20px;\n    font-size: 50px;\n    font-weight: 500;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 32px;\n      font-size: 68px;\n    }\n  }\n  h3 {\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      margin-bottom: 14px;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n    color: ${theme.colors.light};\n  }\n\n  span {\n    color: ${theme.colors.primary};\n  }\n`;\n","import { Container } from './AddBookPopup.styled';\n\nexport const AddBookPopup = () => {\n  return (\n    <Container>\n      <div>👍</div>\n      <h3>Good job</h3>\n      <p>\n        Your book is now in <span>the library!</span> The joy knows no bounds\n        and now you can start your training\n      </p>\n    </Container>\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ErrorMsg,\n  Label,\n  StyledInput,\n  StyledLink,\n} from 'components/Auth/Form.styled';\nimport {\n  BtnApply,\n  FormTitle,\n  InputWrap,\n  LinkWrap,\n  Title,\n} from 'components/Filters/Filters.styled';\nimport { NavLink } from 'react-router-dom';\nimport sprite from '../../images/sprite.svg';\nimport book1 from '../../images/book (1).jpg';\nimport book2 from '../../images/book (2).jpg';\nimport book3 from '../../images/book (3).jpg';\nimport {\n  BookItem,\n  BookList,\n  Container,\n  RecommendedWrap,\n} from './AddBook.styled';\nimport { useState } from 'react';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { AddBookPopup } from 'components/PopUp/AddBookPopup';\n\nexport const AddBook = () => {\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Book title is required'),\n    author: Yup.string().required('Author is required'),\n    pages: Yup.number()\n      .required('Number of pages is required')\n      .positive('Number of pages must be positive')\n      .integer('Number of pages must be an integer'),\n  });\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = book => {\n    setIsModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <>\n      <Container>\n        <div>\n          <Formik\n            initialValues={{ title: '', author: '', pages: '' }}\n            validationSchema={validationSchema}\n            onSubmit={values => {\n              console.log(values);\n              openModal();\n              //search\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <FormTitle>Filters:</FormTitle>\n                <InputWrap>\n                  <Label htmlFor=\"title\">Book title:</Label>\n                  <StyledInput\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    placeholder=\"Enter text\"\n                  />\n                </InputWrap>\n                {errors.title && touched.title && (\n                  <ErrorMsg name=\"title\" component=\"div\" />\n                )}\n                <InputWrap>\n                  <Label htmlFor=\"author\">The author:</Label>\n                  <StyledInput\n                    type=\"text\"\n                    name=\"author\"\n                    id=\"author\"\n                    placeholder=\"Enter text\"\n                  />\n                </InputWrap>\n                {errors.author && touched.author && (\n                  <ErrorMsg name=\"author\" component=\"div\" />\n                )}\n                <InputWrap>\n                  <Label htmlFor=\"pages\">Number of pages:</Label>\n                  <StyledInput\n                    type=\"number\"\n                    name=\"pages\"\n                    id=\"pages\"\n                    placeholder=\"0\"\n                  />\n                </InputWrap>\n                {errors.pages && touched.pages && (\n                  <ErrorMsg name=\"pages\" component=\"div\" />\n                )}\n                <BtnApply type=\"submit\">Add book</BtnApply>\n              </Form>\n            )}\n          </Formik>\n        </div>\n        <RecommendedWrap>\n          <Title>Recommended books</Title>\n          <BookList>\n            <BookItem>\n              <img src={book1} alt=\"book\" />\n              <h3>Title</h3>\n              <p>Author</p>\n            </BookItem>\n            <BookItem>\n              <img src={book2} alt=\"book\" />\n              <h3>Title</h3>\n              <p>Author</p>\n            </BookItem>\n            <BookItem>\n              <img src={book3} alt=\"book\" />\n              <h3>Title</h3>\n              <p>Author</p>\n            </BookItem>\n          </BookList>\n          <LinkWrap>\n            <StyledLink to=\"/\">Home</StyledLink>\n            <NavLink to=\"/\">\n              <svg width=\"24px\" height=\"24px\">\n                <use href={`${sprite}#log-in`} />\n              </svg>\n            </NavLink>\n          </LinkWrap>\n        </RecommendedWrap>\n      </Container>\n      <PopUp isOpen={isModalOpen} onClose={closeModal}>\n        <AddBookPopup />\n      </PopUp>\n    </>\n  );\n};\n","import {\n  AddedItem,\n  AddedList,\n  Container,\n  HelperWrap,\n  InfoWrap,\n  NoBookWrap,\n  Select,\n  Title,\n} from './MyLibraryBooks.styled';\nimport sprite from '../../images/sprite.svg';\nimport book1 from '../../images/book (1).jpg';\nimport book2 from '../../images/book (5).jpg';\nimport { useState } from 'react';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { AboutBookPopup } from 'components/PopUp/AboutBookPopup';\n\nexport const MyLibraryBooks = ({ book }) => {\n  const isBook = true;\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedBook, setSelectedBook] = useState(null);\n\n  const openModal = book => {\n    setSelectedBook(book);\n    setIsModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setSelectedBook(null);\n    setIsModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n  return (\n    <>\n      <Container>\n        <HelperWrap>\n          <Title>My Library</Title>\n          <Select id=\"myBook\">\n            <option value=\"all\">All book</option>\n            <option value=\"unread\">Unread</option>\n            <option value=\"in-progress\">In progress</option>\n            <option value=\"done\">Done</option>\n          </Select>\n        </HelperWrap>\n\n        {!isBook ? (\n          <NoBookWrap>\n            <div>📚</div>\n            <p>\n              To start training, add <span>some of your books</span> or from the\n              recommended ones\n            </p>\n          </NoBookWrap>\n        ) : (\n          <AddedList>\n            <AddedItem onClick={() => openModal(book1)}>\n              <img src={book1} alt=\"book\" />\n              <InfoWrap>\n                <div>\n                  <h3>Title</h3>\n                  <p>Author</p>\n                </div>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </InfoWrap>\n            </AddedItem>\n            <AddedItem>\n              <img src={book2} alt=\"book\" />\n              <InfoWrap>\n                <div>\n                  <h3>Title</h3>\n                  <p>Author</p>\n                </div>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </InfoWrap>\n            </AddedItem>\n          </AddedList>\n        )}\n      </Container>\n      {isModalOpen && (\n        <PopUp isOpen={isModalOpen} onClose={closeModal}>\n          <AboutBookPopup book={selectedBook} fromLibrary />\n        </PopUp>\n      )}\n    </>\n  );\n};\n","import { AddBook } from 'components/AddBook/AddBook';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { MyLibraryBooks } from 'components/MyLibraryBooks/MyLibraryBooks';\nimport { Section } from 'components/RecommendedBooks/RecommendedBooks.styled';\n\nexport const Library = () => {\n  return (\n    <Section>\n      <Dashboard>\n        <AddBook />\n      </Dashboard>\n      <MyLibraryBooks />\n    </Section>\n  );\n};\n\nexport default Library;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","theme","Title","_templateObject2","Select","_templateObject3","chevron","NoBookWrap","_templateObject4","HelperWrap","_templateObject5","AddedList","_templateObject6","AddedItem","_templateObject7","InfoWrap","_templateObject8","RecommendedWrap","BookList","BookItem","AddBookPopup","_jsxs","children","_jsx","AddBook","validationSchema","Yup","shape","title","required","author","pages","positive","integer","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_Fragment","Formik","initialValues","onSubmit","values","console","log","document","body","style","overflow","_ref","errors","touched","Form","FormTitle","InputWrap","Label","htmlFor","StyledInput","type","name","id","placeholder","ErrorMsg","component","BtnApply","src","book1","alt","book2","book3","LinkWrap","StyledLink","to","NavLink","width","height","href","concat","sprite","PopUp","isOpen","onClose","MyLibraryBooks","book","_useState3","_useState4","selectedBook","setSelectedBook","value","onClick","openModal","AboutBookPopup","fromLibrary","Library","Section","Dashboard"],"sourceRoot":""}