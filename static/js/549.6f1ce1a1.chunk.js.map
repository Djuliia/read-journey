{"version":3,"file":"static/js/549.6f1ce1a1.chunk.js","mappings":"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","sources":["components/AddReading/AddReading.styled.js","components/AddReading/Progress.js","components/Diary/Diary.styled.js","components/Diary/Diary.js","components/AddReading/AddReading.js","components/MyReading/MyReading.styled.js","components/PopUp/FinishedReadPopup.js","components/MyReading/MyReading.js","pages/Reading.js"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    max-width: 353px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.02em;\n  color: ${theme.colors.light};\n`;\n\nexport const StarWrap = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  width: 80px;\n  height: 80px;\n  background-color: #262626;\n  border-radius: 50%;\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 50px;\n    width: 100px;\n    height: 100px;\n    margin-bottom: 52px;\n    font-size: 50px;\n    line-height: 1.4;\n  }\n`;\n","import { StarWrap, Text, Title } from './AddReading.styled';\n\nexport const Progress = () => {\n  return (\n    <div>\n      <Title>Progress</Title>\n      <Text>\n        Here you will see when and how much you read. To record, click on the\n        red button above.\n      </Text>\n      <StarWrap>ðŸŒŸ</StarWrap>\n    </div>\n  );\n};\n","import { styled, css } from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  padding: 16px;\n  border-radius: 12px;\n  background: #262626;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst btnStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n`;\nexport const BtnIcon = styled.button`\n  ${btnStyles};\n  svg {\n    stroke: #686868;\n    fill: transparent;\n  }\n\n  &:hover,\n  &:active {\n    svg {\n      stroke: ${theme.colors.primary};\n    }\n  }\n`;\n\nexport const DiarySection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media screen and (min-width: 768px) {\n    width: 321px;\n  }\n`;\n\nexport const StatList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  div {\n    display: flex;\n    gap: 9px;\n    margin-bottom: 16px;\n    @media screen and (min-width: 768px) {\n      gap: 10px;\n    }\n  }\n\n  h4 {\n    margin-left: 25px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 30px;\n      margin-bottom: 8px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  span {\n    margin-left: 25px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n\n    @media screen and (min-width: 768px) {\n      margin-left: 30px;\n      font-size: 12px;\n      line-height: 1.17;\n    }\n  }\n  button {\n    ${btnStyles}\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: 0.02em;\n  transition: color ${theme.transition};\n  color: ${({ $isActive, theme }) =>\n    $isActive ? theme.colors.primary : theme.colors.light};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n  }\n`;\n\nexport const GraphList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 17px;\n  color: ${theme.colors.light};\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n  h4 {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.33;\n    letter-spacing: -0.02;\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.29;\n    }\n  }\n\n  p {\n    width: 43px;\n    margin-top: 7px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -2%;\n\n    @media screen and (min-width: 768px) {\n      width: 55px;\n      font-size: 12px;\n      font-weight: 500;\n      line-height: 1.17;\n    }\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n\n    &:hover {\n      svg {\n        stroke: ${theme.colors.error};\n      }\n    }\n\n    svg {\n      transform: translateY(-4px);\n      transition: ${theme.transition};\n      stroke: ${theme.colors.light};\n      fill: transparent;\n    }\n  }\n`;\n\nexport const GraphWrap = styled.div`\n  margin-top: 19px;\n  margin-right: 6px;\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n    margin-right: 8px;\n  }\n`;\n\nexport const HelperWrap = styled.div`\n  display: flex;\n  gap: 6px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const StatSection = styled.div`\n  padding: 20px;\n  width: 100%;\n  border-radius: 12px;\n  background: #262626;\n  @media screen and (min-width: 768px) {\n    padding: 28px;\n    width: 321px;\n  }\n\n  img {\n    margin: 0 auto;\n    width: 116px;\n    margin-bottom: 21px;\n    @media screen and (min-width: 768px) {\n      width: 138px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 189px;\n    }\n  }\n\n  h4 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n    letter-spacing: -2%;\n    margin-bottom: 4px;\n    @media screen and (min-width: 768px) {\n      margin-bottom: 8px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  p {\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n    @media screen and (min-width: 768px) {\n      font-size: 12px;\n      line-height: 1.17;\n    }\n  }\n`;\n\nexport const StatusBlock = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 4px;\n  background-color: ${theme.colors.status};\n`;\n\nexport const StatusWrap = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n","import {\n  BtnIcon,\n  ButtonWrap,\n  Container,\n  DiarySection,\n  GraphList,\n  GraphWrap,\n  HeaderWrap,\n  HelperWrap,\n  StatList,\n  StatSection,\n  StatusBlock,\n  StatusWrap,\n  Text,\n} from './Diary.styled';\nimport progressMobile from '../../images/progress/progress-bar_mobile.webp';\nimport progressTablet from '../../images/progress/progress-bar_tablet.webp';\nimport progressDesktop from '../../images/progress/progress-bar_desktop.webp';\n\nimport sprite from '../../images/sprite.svg';\nimport { Title } from 'components/AddReading/AddReading.styled';\nimport { useState } from 'react';\n\nexport const Diary = () => {\n  const [isActive, setIsActive] = useState(true);\n  const [isStat, setIsStat] = useState(false);\n\n  const handleDiary = () => {\n    setIsStat(false);\n  };\n\n  const handleStat = () => {\n    setIsStat(true);\n  };\n  return (\n    <Container>\n      <HeaderWrap>\n        <Title>{isStat ? 'Statistics' : 'Diary'}</Title>\n        <ButtonWrap>\n          <BtnIcon onClick={handleDiary}>\n            <svg width=\"16\" height=\"16\">\n              <use href={`${sprite}#hourglass`} />\n            </svg>\n          </BtnIcon>\n          <BtnIcon onClick={handleStat}>\n            <svg width=\"16\" height=\"16\">\n              <use href={`${sprite}#pie-chart`} />\n            </svg>\n          </BtnIcon>\n        </ButtonWrap>\n      </HeaderWrap>\n      {!isStat ? (\n        <DiarySection>\n          <StatList>\n            <li>\n              <div>\n                <button onClick={() => setIsActive(!isActive)}>\n                  <svg width=\"16\" height=\"16\">\n                    <use\n                      href={\n                        !isActive\n                          ? `${sprite}#black-block`\n                          : `${sprite}#black-block-active`\n                      }\n                    />\n                  </svg>\n                </button>\n                <Text $isActive={isActive}>21.10.2023</Text>\n              </div>\n              <h4> 7.6%</h4>\n              <span>29 minutes</span>\n            </li>\n            <li>\n              <div>\n                <button onClick={() => setIsActive(!isActive)}>\n                  <svg width=\"16\" height=\"16\">\n                    <use\n                      href={\n                        !isActive\n                          ? `${sprite}#black-block`\n                          : `${sprite}#black-block-active`\n                      }\n                    />\n                  </svg>\n                </button>\n                <Text $isActive={isActive}>19.10.2023</Text>\n              </div>\n              <h4> 10.5%</h4>\n              <span>40 minutes</span>\n            </li>\n          </StatList>\n\n          <GraphList>\n            <li>\n              <h4>42 pages</h4>\n              <HelperWrap>\n                <GraphWrap>\n                  <svg width=\"43\" height=\"18\">\n                    <use href={`${sprite}#graph1`} />\n                  </svg>\n                  <p>45 pages per hour</p>\n                </GraphWrap>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </HelperWrap>\n            </li>\n            <li>\n              <p>87 pages</p>\n              <HelperWrap>\n                <GraphWrap>\n                  <svg width=\"43\" height=\"18\">\n                    <use href={`${sprite}#graph2`} />\n                  </svg>\n                  <p>45 pages per hour</p>\n                </GraphWrap>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </HelperWrap>\n            </li>\n          </GraphList>\n        </DiarySection>\n      ) : (\n        <StatSection>\n          <img\n            alt=\"Progress bar\"\n            srcSet={`${progressMobile} 116w, ${progressTablet} 128w, ${progressDesktop} 189w`}\n            size=\"(max-width: 375px) 116px, (max-width: 1439px) 138px, 189px\"\n            src={progressMobile}\n          />\n          <StatusWrap>\n            <StatusBlock />\n            <div>\n              <h4>19.14%</h4>\n              <p>171 pages read</p>\n            </div>\n          </StatusWrap>\n        </StatSection>\n      )}\n    </Container>\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container } from './AddReading.styled';\nimport {\n  BtnApply,\n  FormTitle,\n  InputWrap,\n} from 'components/Filters/Filters.styled';\nimport { ErrorMsg, Label, StyledInput } from 'components/Auth/Form.styled';\nimport { Progress } from './Progress';\nimport { Diary } from '../Diary/Diary';\n\nexport const AddReading = ({ isStart, handleStart }) => {\n  const handleSubmit = async values => {\n    console.log(values);\n  };\n\n  const validationSchema = Yup.object().shape({\n    totalPages: Yup.number()\n      .required('Number of pages is required')\n      .positive('Number of pages must be positive')\n      .integer('Number of pages must be an integer'),\n  });\n  return (\n    <Container>\n      <Formik\n        initialValues={{ totalPages: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <FormTitle>Filters:</FormTitle>\n            <InputWrap>\n              <Label htmlFor=\"pages\">Number of pages:</Label>\n              <StyledInput\n                type=\"number\"\n                name=\"totalPages\"\n                id=\"pages\"\n                placeholder=\"0\"\n              />\n            </InputWrap>\n            {errors.totalPages && touched.totalPages && (\n              <ErrorMsg name=\"totalPages\" component=\"div\" />\n            )}\n            {\n              <BtnApply type=\"submit\" onClick={handleStart}>\n                {isStart ? 'To stop' : 'To start'}\n              </BtnApply>\n            }\n          </Form>\n        )}\n      </Formik>\n      {!isStart ? <Progress /> : <Diary />}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const BookWrap = styled.div`\n  margin: 0 auto;\n  margin-top: 40px;\n  width: 146px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    width: 317px;\n  }\n\n  img {\n    margin: 0 auto;\n    border-radius: 8px;\n    @media screen and (min-width: 768px) {\n      width: 169px;\n    }\n  }\n  h3 {\n    margin-top: 10px;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.29;\n    letter-spacing: -0.02em;\n    overflow-wrap: break-word;\n    @media screen and (min-width: 768px) {\n      width: 317px;\n      margin-top: 25px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n  p {\n    margin-top: 5px;\n    margin-bottom: 20px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n    overflow-wrap: break-word;\n    @media screen and (min-width: 768px) {\n      width: 317px;\n      margin-bottom: 16px;\n      font-size: 14px;\n      line-height: 1.29;\n    }\n  }\n\n  button {\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: 2px solid #f9f9f9;\n    background-color: ${theme.colors.secondary};\n\n    @media screen and (min-width: 768px) {\n      width: 50px;\n      height: 50px;\n    }\n  }\n`;\n\nexport const BtnStart = styled.div`\n  width: 30px;\n  height: 30px;\n  background: #e90516;\n  border-radius: 50%;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const BtnStop = styled.div`\n  width: 15px;\n  height: 15px;\n  background: #e90516;\n  border-radius: 3px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { Container } from './AddBookPopup.styled';\n\nexport const FinishedReadPopup = () => {\n  return (\n    <Container>\n      <div>ðŸ“š</div>\n      <h3>The book is read</h3>\n      <p>\n        It was an <span>exciting journey</span>, where each page revealed new\n        horizons, and the characters became inseparable friends.\n      </p>\n    </Container>\n  );\n};\n","import {\n  Container,\n  Title,\n} from 'components/MyLibraryBooks/MyLibraryBooks.styled';\n\nimport { BookWrap, BtnStart, BtnStop } from './MyReading.styled';\nimport { useState } from 'react';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { FinishedReadPopup } from 'components/PopUp/FinishedReadPopup';\nimport { useLocation } from 'react-router-dom';\n\nexport const MyReading = ({ isStart, handleStart }) => {\n  const location = useLocation();\n  const { book } = location.state;\n\n  const [isFinished, setIsFinished] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = book => {\n    setIsModalOpen(true);\n    console.log(book);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const handleFinished = () => {\n    setIsFinished(true);\n    openModal();\n  };\n\n  return (\n    <>\n      <Container>\n        <Title>My reading</Title>\n        <BookWrap>\n          <img src={book.imageUrl} alt=\"book\" />\n          <h3>{book.title}</h3>\n          <p>{book.author}</p>\n          <button\n            onClick={isFinished && !isStart ? handleFinished : handleStart}\n          >\n            {!isStart ? <BtnStart /> : <BtnStop />}\n          </button>\n        </BookWrap>\n      </Container>\n      {isModalOpen ? (\n        <PopUp isOpen={isModalOpen} onClose={closeModal}>\n          <FinishedReadPopup />\n        </PopUp>\n      ) : null}\n    </>\n  );\n};\n","import { AddReading } from 'components/AddReading/AddReading';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { MyReading } from 'components/MyReading/MyReading';\nimport { Section } from 'components/RecommendedBooks/RecommendedBooks.styled';\nimport { useState } from 'react';\n\nexport const Reading = () => {\n  const [isStart, setIsStart] = useState(false);\n  // const [isFinished, setIsFinished] = useState(false);\n  const handleStart = () => setIsStart(prev => !prev);\n\n  return (\n    <Section>\n      <Dashboard>\n        <AddReading isStart={isStart} handleStart={handleStart} />\n      </Dashboard>\n      <MyReading isStart={isStart} handleStart={handleStart} />\n    </Section>\n  );\n};\n\nexport default Reading;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Text","_templateObject3","theme","StarWrap","_templateObject4","Progress","_jsxs","children","_jsx","ButtonWrap","HeaderWrap","btnStyles","css","BtnIcon","_templateObject5","DiarySection","_templateObject6","StatList","_templateObject7","_templateObject8","_ref","$isActive","colors","primary","light","GraphList","_templateObject9","GraphWrap","_templateObject10","HelperWrap","_templateObject11","StatSection","_templateObject12","StatusBlock","_templateObject13","StatusWrap","_templateObject14","Diary","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","_useState3","_useState4","isStat","setIsStat","onClick","width","height","href","concat","sprite","alt","srcSet","progressMobile","progressTablet","progressDesktop","size","src","AddReading","isStart","handleStart","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","console","log","stop","_x","apply","arguments","validationSchema","Yup","shape","totalPages","required","positive","integer","Formik","initialValues","onSubmit","_ref3","errors","touched","Form","FormTitle","InputWrap","Label","htmlFor","StyledInput","type","name","id","placeholder","ErrorMsg","component","BtnApply","BookWrap","BtnStart","BtnStop","FinishedReadPopup","MyReading","book","useLocation","state","isFinished","setIsFinished","isModalOpen","setIsModalOpen","_Fragment","imageUrl","title","author","document","body","style","overflow","openModal","PopUp","isOpen","onClose","Reading","setIsStart","Section","Dashboard"],"sourceRoot":""}