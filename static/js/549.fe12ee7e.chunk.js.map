{"version":3,"file":"static/js/549.fe12ee7e.chunk.js","mappings":"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","sources":["components/AddReading/AddReading.styled.js","components/AddReading/Progress.js","components/Diary/Diary.styled.js","components/Diary/Diary.js","components/AddReading/AddReading.js","components/MyReading/MyReading.styled.js","components/PopUp/FinishedReadPopup.js","components/MyReading/MyReading.js","pages/Reading.js"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    max-width: 313px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.02em;\n  color: ${theme.colors.light};\n`;\n\nexport const StarWrap = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  width: 80px;\n  height: 80px;\n  background-color: #262626;\n  border-radius: 50%;\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 50px;\n    width: 100px;\n    height: 100px;\n    margin-bottom: 52px;\n    font-size: 50px;\n    line-height: 1.4;\n  }\n`;\n","import { StarWrap, Text, Title } from './AddReading.styled';\n\nexport const Progress = () => {\n  return (\n    <div>\n      <Title>Progress</Title>\n      <Text>\n        Here you will see when and how much you read. To record, click on the\n        red button above.\n      </Text>\n      <StarWrap>🌟</StarWrap>\n    </div>\n  );\n};\n","import { styled, css } from 'styled-components';\nimport { theme } from 'theme';\n\nexport const Container = styled.div`\n  padding: 16px;\n  border-radius: 12px;\n  background: #262626;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst btnStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n`;\nexport const BtnIcon = styled.button`\n  ${btnStyles};\n  svg {\n    stroke: #686868;\n    fill: transparent;\n  }\n\n  &:hover,\n  &:active {\n    svg {\n      stroke: ${theme.colors.primary};\n    }\n  }\n`;\n\nexport const DiarySection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  /* @media screen and (min-width: 768px) {\n    width: 321px;\n  } */\n`;\n\nexport const StatList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  div {\n    display: flex;\n    gap: 9px;\n    margin-bottom: 16px;\n    @media screen and (min-width: 768px) {\n      gap: 10px;\n    }\n  }\n\n  h4 {\n    margin-left: 25px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n    letter-spacing: -0.02em;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 30px;\n      margin-bottom: 8px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  span {\n    margin-left: 25px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n\n    @media screen and (min-width: 768px) {\n      margin-left: 30px;\n      font-size: 12px;\n      line-height: 1.17;\n    }\n  }\n  button {\n    ${btnStyles}\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: 0.02em;\n  transition: color ${theme.transition};\n  color: ${({ $isActive, theme }) =>\n    $isActive ? theme.colors.primary : theme.colors.light};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n  }\n`;\n\nexport const GraphList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 17px;\n  color: ${theme.colors.light};\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n  h4 {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.33;\n    letter-spacing: -0.02;\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.29;\n    }\n  }\n\n  p {\n    width: 43px;\n    margin-top: 7px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -2%;\n\n    @media screen and (min-width: 768px) {\n      width: 55px;\n      font-size: 12px;\n      font-weight: 500;\n      line-height: 1.17;\n    }\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n\n    &:hover {\n      svg {\n        stroke: ${theme.colors.error};\n      }\n    }\n\n    svg {\n      transform: translateY(-4px);\n      transition: ${theme.transition};\n      stroke: ${theme.colors.light};\n      fill: transparent;\n    }\n  }\n`;\n\nexport const GraphWrap = styled.div`\n  margin-top: 19px;\n  margin-right: 6px;\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n    margin-right: 8px;\n  }\n`;\n\nexport const HelperWrap = styled.div`\n  display: flex;\n  gap: 6px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const StatSection = styled.div`\n  padding: 20px;\n  width: 100%;\n  border-radius: 12px;\n  background: #262626;\n  @media screen and (min-width: 768px) {\n    padding: 28px;\n    width: 321px;\n  }\n\n  img {\n    margin: 0 auto;\n    width: 116px;\n    margin-bottom: 21px;\n    @media screen and (min-width: 768px) {\n      width: 138px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 189px;\n    }\n  }\n\n  h4 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.29;\n    letter-spacing: -2%;\n    margin-bottom: 4px;\n    @media screen and (min-width: 768px) {\n      margin-bottom: 8px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  p {\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n    @media screen and (min-width: 768px) {\n      font-size: 12px;\n      line-height: 1.17;\n    }\n  }\n`;\n\nexport const StatusBlock = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 4px;\n  background-color: ${theme.colors.status};\n`;\n\nexport const StatusWrap = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectReadingBooks } from '../../redux/books/selectors';\nimport {\n  BtnIcon,\n  ButtonWrap,\n  Container,\n  DiarySection,\n  GraphList,\n  GraphWrap,\n  HeaderWrap,\n  HelperWrap,\n  StatList,\n  StatSection,\n  StatusBlock,\n  StatusWrap,\n  Text,\n} from './Diary.styled';\nimport progressMobile from '../../images/progress/progress-bar_mobile.webp';\nimport progressTablet from '../../images/progress/progress-bar_tablet.webp';\nimport progressDesktop from '../../images/progress/progress-bar_desktop.webp';\nimport sprite from '../../images/sprite.svg';\nimport { Title } from 'components/AddReading/AddReading.styled';\n\nexport const Diary = ({ isStart }) => {\n  const [isActive, setIsActive] = useState(true);\n  const [isStat, setIsStat] = useState(false);\n  const bookInfo = useSelector(selectReadingBooks);\n  const { progress, totalPages, timeLeftToRead } = bookInfo;\n  console.log(timeLeftToRead);\n\n  const handleDiary = () => {\n    setIsStat(false);\n  };\n\n  const handleStat = () => {\n    setIsStat(true);\n  };\n\n  return (\n    <Container>\n      <HeaderWrap>\n        <Title>{isStat ? 'Statistics' : 'Diary'}</Title>\n        <ButtonWrap>\n          <BtnIcon onClick={handleDiary}>\n            <svg width=\"16\" height=\"16\">\n              <use href={`${sprite}#hourglass`} />\n            </svg>\n          </BtnIcon>\n          <BtnIcon onClick={handleStat}>\n            <svg width=\"16\" height=\"16\">\n              <use href={`${sprite}#pie-chart`} />\n            </svg>\n          </BtnIcon>\n        </ButtonWrap>\n      </HeaderWrap>\n      {timeLeftToRead && !isStat ? (\n        <DiarySection>\n          <StatList>\n            {progress?.map(\n              ({ _id, startReading, finishPage, startPage, finishReading }) => (\n                <li key={_id}>\n                  <div>\n                    <button onClick={() => setIsActive(!isActive)}>\n                      <svg width=\"16\" height=\"16\">\n                        <use\n                          href={\n                            isActive\n                              ? `${sprite}#black-block-active`\n                              : `${sprite}#black-block`\n                          }\n                        />\n                      </svg>\n                    </button>\n                    <Text $isActive={isActive}>\n                      {new Date(startReading).toLocaleDateString()}\n                    </Text>\n                  </div>\n                  <h4>\n                    {(((finishPage - startPage) / totalPages) * 100).toFixed(1)}\n                    %\n                  </h4>\n                  <span>\n                    {`${\n                      (new Date(finishReading) - new Date(startReading)) /\n                      (1000 * 60)\n                    } minutes`}\n                  </span>\n                </li>\n              )\n            )}\n          </StatList>\n          <GraphList>\n            <li>\n              <h4>42 pages</h4>\n              <HelperWrap>\n                <GraphWrap>\n                  <svg width=\"43\" height=\"18\">\n                    <use href={`${sprite}#graph1`} />\n                  </svg>\n                  <p>45 pages per hour</p>\n                </GraphWrap>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </HelperWrap>\n            </li>\n            <li>\n              <p>87 pages</p>\n              <HelperWrap>\n                <GraphWrap>\n                  <svg width=\"43\" height=\"18\">\n                    <use href={`${sprite}#graph2`} />\n                  </svg>\n                  <p>45 pages per hour</p>\n                </GraphWrap>\n                <button>\n                  <svg width=\"14\" height=\"14\">\n                    <use href={`${sprite}#trash`} />\n                  </svg>\n                </button>\n              </HelperWrap>\n            </li>\n          </GraphList>\n        </DiarySection>\n      ) : null}\n      {!isStat && !timeLeftToRead ? <div>No time left to read.</div> : null}\n      {isStat ? (\n        <StatSection>\n          <img\n            alt=\"Progress bar\"\n            srcSet={`${progressMobile} 116w, ${progressTablet} 128w, ${progressDesktop} 189w`}\n            sizes=\"(max-width: 375px) 116px, (max-width: 1439px) 138px, 189px\"\n            src={progressMobile}\n          />\n          <StatusWrap>\n            <StatusBlock />\n            <div>\n              <h4>19.14%</h4>\n              <p>171 pages read</p>\n            </div>\n          </StatusWrap>\n        </StatSection>\n      ) : null}\n    </Container>\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container } from './AddReading.styled';\nimport {\n  BtnApply,\n  FormTitle,\n  InputWrap,\n} from 'components/Filters/Filters.styled';\nimport { ErrorMsg, Label, StyledInput } from 'components/Auth/Form.styled';\nimport { Progress } from './Progress';\nimport { Diary } from '../Diary/Diary';\nimport { startReading, stopReading } from '../../redux/books/operations';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nexport const AddReading = ({ isStart, book, setIsStart }) => {\n  const dispatch = useDispatch();\n  const id = book._id;\n\n  const handleSubmit = async ({ totalPages }) => {\n    try {\n      if (!isStart) {\n        const action = await dispatch(startReading({ page: totalPages, id }));\n\n        if (startReading.fulfilled.match(action)) {\n          toast.success('The reading has started');\n          setIsStart(!isStart);\n        } else if (startReading.rejected.match(action)) {\n          const error = action.error;\n          if (\n            error &&\n            error.message === 'You have already started reading this book'\n          ) {\n            toast.error('You have already started reading this book');\n            return;\n          }\n        }\n      } else {\n        const action = await dispatch(stopReading({ page: totalPages, id }));\n        if (stopReading.fulfilled.match(action)) {\n          // setIsStart(!isStart);\n        } else if (stopReading.rejected.match(action)) {\n          const error = action.error;\n          toast.error('Failed to stop reading', error);\n          return;\n        }\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    totalPages: Yup.number()\n      .required('Number of pages is required')\n      .positive('Number of pages must be positive')\n      .integer('Number of pages must be an integer'),\n  });\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ totalPages: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <FormTitle>{isStart ? 'Stop page' : 'Start page'}</FormTitle>\n            <InputWrap>\n              <Label htmlFor=\"pages\">Number of pages:</Label>\n              <StyledInput\n                type=\"number\"\n                name=\"totalPages\"\n                id=\"pages\"\n                placeholder=\"0\"\n              />\n            </InputWrap>\n            {errors.totalPages && touched.totalPages && (\n              <ErrorMsg name=\"totalPages\" component=\"div\" />\n            )}\n            {\n              <BtnApply type=\"submit\">\n                {isStart ? 'To stop' : 'To start'}\n              </BtnApply>\n            }\n          </Form>\n        )}\n      </Formik>\n      {!isStart ? <Progress /> : <Diary isStart={isStart} />}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const BookWrap = styled.div`\n  margin: 0 auto;\n  margin-top: 40px;\n  width: 146px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    width: 317px;\n  }\n\n  img {\n    margin: 0 auto;\n    border-radius: 8px;\n    @media screen and (min-width: 768px) {\n      width: 169px;\n    }\n  }\n  h3 {\n    margin-top: 10px;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.29;\n    letter-spacing: -0.02em;\n    overflow-wrap: break-word;\n    @media screen and (min-width: 768px) {\n      width: 317px;\n      margin-top: 25px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n  p {\n    margin-top: 5px;\n    margin-bottom: 20px;\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.light};\n    overflow-wrap: break-word;\n    @media screen and (min-width: 768px) {\n      width: 317px;\n      margin-bottom: 16px;\n      font-size: 14px;\n      line-height: 1.29;\n    }\n  }\n\n  button {\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: 2px solid #f9f9f9;\n    background-color: ${theme.colors.secondary};\n\n    @media screen and (min-width: 768px) {\n      width: 50px;\n      height: 50px;\n    }\n  }\n`;\n\nexport const BtnStart = styled.div`\n  width: 30px;\n  height: 30px;\n  background: #e90516;\n  border-radius: 50%;\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const BtnStop = styled.div`\n  width: 15px;\n  height: 15px;\n  background: #e90516;\n  border-radius: 3px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { Container } from './AddBookPopup.styled';\n\nexport const FinishedReadPopup = () => {\n  return (\n    <Container>\n      <div>📚</div>\n      <h3>The book is read</h3>\n      <p>\n        It was an <span>exciting journey</span>, where each page revealed new\n        horizons, and the characters became inseparable friends.\n      </p>\n    </Container>\n  );\n};\n","import {\n  Container,\n  Title,\n} from 'components/MyLibraryBooks/MyLibraryBooks.styled';\n\nimport { BookWrap, BtnStart, BtnStop } from './MyReading.styled';\nimport { useState } from 'react';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { FinishedReadPopup } from 'components/PopUp/FinishedReadPopup';\nimport noImg from '../../images/noImg.webp';\n\nexport const MyReading = ({ isStart, setIsStart, book }) => {\n  const [isFinished, setIsFinished] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const handleFinished = () => {\n    setIsFinished(true);\n    openModal();\n  };\n\n  return (\n    <>\n      <Container>\n        <Title>My reading</Title>\n        <BookWrap>\n          <img src={book.imageUrl ? book.imageUrl : noImg} alt={book.title} />\n          <h3>{book.title}</h3>\n          <p>{book.author}</p>\n          <button onClick={isFinished && !isStart ? handleFinished : null}>\n            {!isStart ? <BtnStart /> : <BtnStop />}\n          </button>\n        </BookWrap>\n      </Container>\n      {isModalOpen ? (\n        <PopUp isOpen={isModalOpen} onClose={closeModal}>\n          <FinishedReadPopup />\n        </PopUp>\n      ) : null}\n    </>\n  );\n};\n","import { AddReading } from 'components/AddReading/AddReading';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { MyReading } from 'components/MyReading/MyReading';\nimport { Section } from 'components/RecommendedBooks/RecommendedBooks.styled';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const Reading = () => {\n  const [isStart, setIsStart] = useState(false);\n  const location = useLocation();\n  const book = location.state;\n  // const handleStart = () => setIsStart(prev => !prev);\n\n  return book ? (\n    <Section>\n      <Dashboard>\n        <AddReading isStart={isStart} setIsStart={setIsStart} book={book} />\n      </Dashboard>\n      <MyReading isStart={isStart} setIsStart={setIsStart} book={book} />\n    </Section>\n  ) : null;\n};\n\nexport default Reading;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Text","_templateObject3","theme","StarWrap","_templateObject4","Progress","_jsxs","children","_jsx","ButtonWrap","HeaderWrap","btnStyles","css","BtnIcon","_templateObject5","DiarySection","_templateObject6","StatList","_templateObject7","_templateObject8","_ref","$isActive","colors","primary","light","GraphList","_templateObject9","GraphWrap","_templateObject10","HelperWrap","_templateObject11","StatSection","_templateObject12","StatusBlock","_templateObject13","StatusWrap","_templateObject14","Diary","isStart","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","_useState3","_useState4","isStat","setIsStat","bookInfo","useSelector","selectReadingBooks","progress","totalPages","timeLeftToRead","console","log","onClick","width","height","href","concat","sprite","map","_ref2","_id","startReading","finishPage","startPage","finishReading","Date","toLocaleDateString","toFixed","alt","srcSet","progressMobile","progressTablet","progressDesktop","sizes","src","AddReading","book","setIsStart","dispatch","useDispatch","id","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","action","error","_action","_error","_context","prev","next","page","sent","toast","message","abrupt","stopReading","t0","stop","_x","apply","arguments","validationSchema","Yup","shape","required","positive","integer","Formik","initialValues","onSubmit","_ref4","errors","touched","Form","FormTitle","InputWrap","Label","htmlFor","StyledInput","type","name","placeholder","ErrorMsg","component","BtnApply","BookWrap","BtnStart","BtnStop","FinishedReadPopup","MyReading","isFinished","setIsFinished","isModalOpen","setIsModalOpen","_Fragment","imageUrl","noImg","title","author","document","body","style","overflow","PopUp","isOpen","onClose","Reading","useLocation","state","Section","Dashboard"],"sourceRoot":""}