{"version":3,"file":"static/js/141.29be0b9b.chunk.js","mappings":"kkBAMaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6NAC/BC,EAAAA,GAaSC,EAAeJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sUAGhBI,EAAAA,EAAAA,OAAAA,WAcTC,EAAQP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kdA0BjBO,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uDAKzBU,EAAYZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yOAetBY,GAAcd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mhDAW7BI,EAAAA,EAAAA,OAAAA,QACKA,EAAAA,EAAAA,WAEHA,EAAAA,EAAAA,OAAAA,QAyBWA,EAAAA,EAAAA,OAAAA,MAGAA,EAAAA,EAAAA,OAAAA,QA4CXW,EAAQjB,EAAAA,GAAAA,MAAYkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,8VAUtBI,EAAAA,EAAAA,OAAAA,OASEa,EAASnB,EAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,iJAStBmB,EAAarB,EAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qPACzBI,EAAAA,EAAAA,OAAAA,QAcEiB,GAAWvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAoByB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,qPAMjCI,EAAAA,EAAAA,OAAAA,OASLoB,GAAeC,EAAAA,EAAAA,IAAGC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,0hBAOFI,EAAAA,EAAAA,OAAAA,QAKXA,EAAAA,EAAAA,OAAAA,UACKA,EAAAA,EAAAA,WAUHA,EAAAA,EAAAA,OAAAA,QACWA,EAAAA,EAAAA,OAAAA,WAIXuB,EAAU7B,EAAAA,GAAAA,IAAU8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,4QAkBpB6B,EAAkB/B,EAAAA,GAAAA,OAAagC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,qGACxCwB,GAQSO,EAAWjC,EAAAA,GAAAA,OAAakC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,uKACjCwB,GAWSS,GAAanC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAeqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,0UAM9BI,EAAAA,EAAAA,OAAAA,MACKA,EAAAA,EAAAA,WAGHA,EAAAA,EAAAA,OAAAA,SAUAgC,EAAUtC,EAAAA,GAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,+bAGXI,EAAAA,EAAAA,OAAAA,WAqBHN,EAAAA,GAAAA,QAAcwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,O,6LCvTpBuC,EAAe,WAC1B,IAAMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,SAAS,oBACZC,MAAON,EAAAA,KACJO,QAAQ,mCAAoC,iBAC5CF,SAAS,qBACZG,SAAUR,EAAAA,KACPG,IAAI,EAAG,0BACPE,SAAS,0BAGdI,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAMpC,OACEI,EAAAA,EAAAA,MAAC3D,EAAAA,GAAS,CAAA4D,SAAA,EACRD,EAAAA,EAAAA,MAACtD,EAAAA,GAAY,CAAAuD,SAAA,EACXC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,KACLH,EAAAA,EAAAA,MAACnD,EAAAA,GAAK,CAAAoD,SAAA,CAAC,8BACqBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eAElCC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAElB,KAAM,GAAII,MAAO,GAAIE,SAAU,IAChDT,iBAAkBA,EAClBsB,SAAU,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACnBC,QAAQC,IAAIJ,GAEZE,GACF,EAAER,SAED,SAAAW,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjBd,EAAAA,EAAAA,MAACjD,EAAAA,GAAU,CAACgE,YAAU,EAAAd,SAAA,EACpBD,EAAAA,EAAAA,MAAC9C,EAAAA,GAAS,CAAA+C,SAAA,EACRC,EAAAA,EAAAA,KAAC3C,EAAAA,GAAK,CAACyD,QAAQ,OAAMf,SAAC,WACtBC,EAAAA,EAAAA,KAAC9C,EAAAA,GAAW,CACV6D,KAAK,OACL9B,KAAK,OACL+B,GAAG,OACHC,UAAS,WAAAC,OACPP,EAAO1B,MAAQ2B,EAAQ3B,KAAO,QAAU,SAI7C0B,EAAO1B,MAAQ2B,EAAQ3B,OACtBe,EAAAA,EAAAA,KAACrC,EAAAA,GAAQ,CAACsB,KAAK,OAAOkC,UAAU,QAEjCP,EAAQ3B,OAAS0B,EAAO1B,OACvBe,EAAAA,EAAAA,KAACvC,EAAAA,GAAU,CAAAsC,SAAC,gBAGdD,EAAAA,EAAAA,MAAC9C,EAAAA,GAAS,CAAA+C,SAAA,EACRC,EAAAA,EAAAA,KAAC3C,EAAAA,GAAK,CAACyD,QAAQ,QAAOf,SAAC,WACvBC,EAAAA,EAAAA,KAAC9C,EAAAA,GAAW,CACV6D,KAAK,QACL9B,KAAK,QACL+B,GAAG,QACHC,UAAS,WAAAC,OACPP,EAAOtB,OAASuB,EAAQvB,MAAQ,QAAU,SAI/CsB,EAAOtB,OAASuB,EAAQvB,QACvBW,EAAAA,EAAAA,KAACrC,EAAAA,GAAQ,CAACsB,KAAK,QAAQkC,UAAU,QAElCP,EAAQvB,QAAUsB,EAAOtB,QACxBW,EAAAA,EAAAA,KAACvC,EAAAA,GAAU,CAAAsC,SAAC,iBAGdD,EAAAA,EAAAA,MAAC9C,EAAAA,GAAS,CAAA+C,SAAA,EACRC,EAAAA,EAAAA,KAAC3C,EAAAA,GAAK,CAACyD,QAAQ,WAAUf,SAAC,eAC1BC,EAAAA,EAAAA,KAAC9C,EAAAA,GAAW,CACV6D,KAAMnB,EAAe,OAAS,WAC9BX,KAAK,WACL+B,GAAG,WACHC,UAAS,WAAAC,OACPN,EAAQrB,UAAYoB,EAAOpB,SAAW,QAAU,GAAE,KAAA2B,OAChDN,EAAQrB,WAAaoB,EAAOpB,SAAW,UAAY,OAEzDS,EAAAA,EAAAA,KAACzC,EAAAA,GAAM,CAACwD,KAAK,SAASK,QAAS,WAnE3CvB,GAAgB,SAAAwB,GAAS,OAAKA,CAAS,GAmEgC,EAACtB,SACzDa,EAAQrB,UAAYoB,EAAOpB,UAC1BS,EAAAA,EAAAA,KAAA,OAAKsB,MAAM,KAAKC,OAAO,KAAIxB,UACzBC,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAN,OAAKO,EAAAA,EAAM,cAEpBb,EAAQrB,WAAaoB,EAAOpB,UAC9BS,EAAAA,EAAAA,KAAA,OAAKsB,MAAM,KAAKC,OAAO,KAAIxB,UACzBC,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAN,OAAKO,EAAAA,EAAM,eAGtBzB,EAAAA,EAAAA,KAAA,OAAKsB,MAAM,KAAKC,OAAO,KAAIxB,SACxBH,GACCI,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAN,OAAKO,EAAAA,EAAM,WAEpBzB,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAN,OAAKO,EAAAA,EAAM,qBAM7Bd,EAAOpB,UAAYqB,EAAQrB,WAC1BS,EAAAA,EAAAA,KAACrC,EAAAA,GAAQ,CAACsB,KAAK,WAAWkC,UAAU,QAErCP,EAAQrB,WAAaoB,EAAOpB,WAC3BS,EAAAA,EAAAA,KAACvC,EAAAA,GAAU,CAAAsC,SAAC,wBAGdD,EAAAA,EAAAA,MAAC7B,EAAAA,GAAO,CAAA8B,SAAA,EACNC,EAAAA,EAAAA,KAAC7B,EAAAA,GAAe,CAAC4C,KAAK,SAAQhB,SAAC,kBAC/BC,EAAAA,EAAAA,KAACzB,EAAAA,GAAU,CAACmD,GAAG,SAAQ3B,SAAC,kCAEf,QAInBC,EAAAA,EAAAA,KAACtB,EAAAA,GAAO,CAAAqB,UACND,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACE2B,OAAM,GAAAT,OAAKU,EAAa,SAAAV,OAAQW,EAAe,OAC/CC,MAAM,yBAER9B,EAAAA,EAAAA,KAAA,UACE2B,OAAM,GAAAT,OAAKa,EAAY,SAAAb,OAAQc,EAAc,OAC7CF,MAAM,wBAER9B,EAAAA,EAAAA,KAAA,OAAKiC,IAAKF,EAAcG,IAAI,kBAAkBZ,MAAM,eAK9D,ECvJA,EARiB,WACf,OACEtB,EAAAA,EAAAA,KAAAmC,EAAAA,SAAA,CAAApC,UACEC,EAAAA,EAAAA,KAACnB,EAAY,KAGnB,C","sources":["components/Auth/Form.styled.js","components/Auth/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { theme } from 'theme';\nimport { containerStyles } from '../GlobalStyle';\n\nexport const Container = styled.div`\n  ${containerStyles}\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    justify-content: center;\n    gap: 16px;\n  }\n`;\n\nexport const RegisterWrap = styled.div`\n  padding: 20px 20px 40px;\n  border-radius: 30px;\n  background-color: ${theme.colors.secondary};\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 64px;\n    min-height: 960px;\n    min-width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 40px 64px;\n    min-height: 736px;\n    min-width: 50%;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  margin-bottom: 20px;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: 0.0005em;\n\n  span {\n    color: rgba(227, 227, 227, 0.5);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 444px;\n    margin-top: 157px;\n    margin-bottom: 40px;\n    font-size: 64px;\n    line-height: 0.94;\n    letter-spacing: 0.0003;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 107px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  width: 295px;\n  &:not(:first-of-type) {\n    margin-top: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 472px;\n    &:not(:first-of-type) {\n      margin-top: 14px;\n    }\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 100%;\n  padding: 14px;\n  border-radius: 12px;\n  border: 1px solid transparent;\n  outline: none;\n  background-color: #262626;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.002em;\n  color: ${theme.colors.primary};\n  transition: ${theme.transition};\n  &::placeholder {\n    color: ${theme.colors.primary};\n  }\n  &[name='name'] {\n    padding-left: 59px;\n  }\n  &[name='email'] {\n    padding-left: 49px;\n  }\n  &[name='password'] {\n    padding-left: 78px;\n  }\n  &[name='title'] {\n    padding-left: 77px;\n  }\n  &[name='author'] {\n    padding-left: 85px;\n  }\n  &[name='pages'] {\n    padding-left: 119px;\n  }\n\n  &:hover {\n    border: 1px solid rgba(249, 249, 249, 0.1);\n  }\n  &.error {\n    border: 1px solid ${theme.colors.error};\n  }\n  &.success {\n    border: 1px solid ${theme.colors.status};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 14px;\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.001em;\n    &[name='name'] {\n      padding-left: 65px;\n    }\n    &[name='email'] {\n      padding-left: 53px;\n    }\n    &[name='password'] {\n      padding-left: 86px;\n    }\n    &[name='title'] {\n      padding-left: 86px;\n      width: 295px;\n    }\n    &[name='author'] {\n      padding-left: 95px;\n      width: 295px;\n    }\n    &[name='pages'] {\n      padding-left: 135px;\n      width: 295px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &[name='title'] {\n      width: 313px;\n    }\n    &[name='author'] {\n      width: 313px;\n    }\n    &[name='pages'] {\n      width: 313px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 14px;\n  transform: translateY(-50%);\n  pointer-events: none;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.002em;\n  color: ${theme.colors.light};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.001em;\n  }\n`;\n\nexport const EyeBtn = styled.button`\n  position: absolute;\n  background-color: transparent;\n  border: none;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 18px;\n`;\n\nexport const SuccessMsg = styled.div`\n  color: ${theme.colors.status};\n  margin-left: 14px;\n  margin-top: 4px;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 12px;\n    line-height: 1.17;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-left: 14px;\n  margin-top: 4px;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n  color: ${theme.colors.error};\n\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 12px;\n    line-height: 1.17;\n  }\n`;\n\nconst buttonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 29px;\n  border-radius: 30px;\n  border: 1px solid transparent;\n  background-color: ${theme.colors.primary};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.29;\n  letter-spacing: 0.001em;\n  color: ${theme.colors.secondary};\n  transition: ${theme.transition};\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n    font-size: 20px;\n    line-height: 1;\n  }\n\n  &:hover {\n    border: 1px solid rgba(249, 249, 249, 0.2);\n    color: ${theme.colors.primary};\n    background-color: ${theme.colors.secondary};\n  }\n`;\n\nexport const NavWrap = styled.div`\n  display: flex;\n  gap: 14px;\n  align-items: center;\n  margin-top: 20px;\n  &.special {\n    margin-top: 72px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 82px;\n    gap: 20px;\n\n    &.special {\n      margin-top: 146px;\n    }\n  }\n`;\n\nexport const BtnRegistration = styled.button`\n  ${buttonStyles}\n  width: 140px;\n\n  @media screen and (min-width: 768px) {\n    width: 225px;\n  }\n`;\n\nexport const BtnLogin = styled.button`\n  ${buttonStyles}\n  width: 131px;\n  @media screen and (min-width: 768px) {\n    width: 166px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 225px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: -0.002em;\n  text-decoration: underline;\n  color: ${theme.colors.light};\n  transition: ${theme.transition};\n\n  &:hover {\n    color: ${theme.colors.primary};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.001em;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  padding: 20px 40px 0px 40px;\n  border-radius: 30px;\n  background-color: ${theme.colors.secondary};\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  @media screen and (min-width: 1440px) {\n    display: block;\n    padding: 80px 97px 0px 98px;\n    width: 50%;\n    min-height: 736px;\n  }\n\n  img {\n    margin: 0 auto;\n    width: 255px;\n    @media screen and (min-width: 1440px) {\n      width: 411px;\n    }\n  }\n`;\n\nexport const Img = styled.picture``;\n","import { Logo } from 'components/Logo/Logo';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../images/sprite.svg';\n\nimport {\n  BtnRegistration,\n  Container,\n  ErrorMsg,\n  EyeBtn,\n  ImgWrap,\n  InputWrap,\n  Label,\n  NavWrap,\n  RegisterWrap,\n  StyledForm,\n  StyledInput,\n  StyledLink,\n  SuccessMsg,\n  Title,\n} from './Form.styled';\nimport iPhoneDesktop from '../../images/iPhone_desktop.webp';\nimport iPhoneDesktop2x from '../../images/iPhone_desktop2x.webp';\nimport iPhoneMobile from '../../images/iPhone_mobile.webp';\nimport iPhoneMobile2x from '../../images/iPhone_mobile2x.webp';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Minimum 3 characters')\n      .max(30, 'Maximum 20 characters')\n      .required('Name is required'),\n    email: Yup.string()\n      .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email')\n      .required('Email is required'),\n    password: Yup.string()\n      .min(7, 'Enter a valid password')\n      .required('Password is required'),\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  return (\n    <Container>\n      <RegisterWrap>\n        <Logo />\n        <Title>\n          Expand your mind, reading <span>a book</span>\n        </Title>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { resetForm }) => {\n            console.log(values);\n            // Відправка даних на сервер\n            resetForm();\n          }}\n        >\n          {({ errors, touched }) => (\n            <StyledForm noValidate>\n              <InputWrap>\n                <Label htmlFor=\"name\">Name:</Label>\n                <StyledInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  className={`special ${\n                    errors.name && touched.name ? 'error' : ''\n                  }`}\n                />\n              </InputWrap>\n              {errors.name && touched.name && (\n                <ErrorMsg name=\"name\" component=\"div\" />\n              )}\n              {touched.name && !errors.name && (\n                <SuccessMsg>Valid Name</SuccessMsg>\n              )}\n\n              <InputWrap>\n                <Label htmlFor=\"email\">Mail:</Label>\n                <StyledInput\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className={`special ${\n                    errors.email && touched.email ? 'error' : ''\n                  }`}\n                />\n              </InputWrap>\n              {errors.email && touched.email && (\n                <ErrorMsg name=\"email\" component=\"div\" />\n              )}\n              {touched.email && !errors.email && (\n                <SuccessMsg>Valid Email</SuccessMsg>\n              )}\n\n              <InputWrap>\n                <Label htmlFor=\"password\">Password:</Label>\n                <StyledInput\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  id=\"password\"\n                  className={`special ${\n                    touched.password && errors.password ? 'error' : ''\n                  } ${touched.password && !errors.password ? 'success' : ''}`}\n                />\n                <EyeBtn type=\"button\" onClick={() => handleTogglePassword()}>\n                  {touched.password && errors.password ? (\n                    <svg width=\"20\" height=\"20\">\n                      <use href={`${sprite}#error`} />\n                    </svg>\n                  ) : touched.password && !errors.password ? (\n                    <svg width=\"20\" height=\"20\">\n                      <use href={`${sprite}#check`} />\n                    </svg>\n                  ) : (\n                    <svg width=\"20\" height=\"20\">\n                      {showPassword ? (\n                        <use href={`${sprite}#eye`} />\n                      ) : (\n                        <use href={`${sprite}#eye-off`} />\n                      )}\n                    </svg>\n                  )}\n                </EyeBtn>\n              </InputWrap>\n              {errors.password && touched.password && (\n                <ErrorMsg name=\"password\" component=\"div\" />\n              )}\n              {touched.password && !errors.password && (\n                <SuccessMsg>Password is secure</SuccessMsg>\n              )}\n\n              <NavWrap>\n                <BtnRegistration type=\"submit\">Registration</BtnRegistration>\n                <StyledLink to=\"/login\">Already have an account?</StyledLink>\n              </NavWrap>\n            </StyledForm>\n          )}\n        </Formik>\n      </RegisterWrap>\n      <ImgWrap>\n        <picture>\n          <source\n            srcSet={`${iPhoneDesktop} 1x, ${iPhoneDesktop2x} 2x`}\n            media=\"(min-width: 1440px)\"\n          />\n          <source\n            srcSet={`${iPhoneMobile} 1x, ${iPhoneMobile2x} 2x`}\n            media=\"(max-width: 375px)\"\n          />\n          <img src={iPhoneMobile} alt=\"iPhone 15 Black\" width=\"255\" />\n        </picture>\n      </ImgWrap>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/Auth/RegisterForm';\n\nconst Register = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","containerStyles","RegisterWrap","_templateObject2","theme","Title","_templateObject3","StyledForm","Form","_templateObject4","InputWrap","_templateObject5","StyledInput","Field","_templateObject6","Label","_templateObject7","EyeBtn","_templateObject8","SuccessMsg","_templateObject9","ErrorMsg","ErrorMessage","_templateObject10","buttonStyles","css","_templateObject11","NavWrap","_templateObject12","BtnRegistration","_templateObject13","BtnLogin","_templateObject14","StyledLink","NavLink","_templateObject15","ImgWrap","_templateObject16","_templateObject17","RegisterForm","validationSchema","Yup","shape","name","min","max","required","email","matches","password","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","children","_jsx","Logo","Formik","initialValues","onSubmit","values","_ref","resetForm","console","log","_ref2","errors","touched","noValidate","htmlFor","type","id","className","concat","component","onClick","prevState","width","height","href","sprite","to","srcSet","iPhoneDesktop","iPhoneDesktop2x","media","iPhoneMobile","iPhoneMobile2x","src","alt","_Fragment"],"sourceRoot":""}